# Nginx Configuration for Beyond the AI Plateau Production Environment
# Optimized for PWA delivery with CDN integration and security headers

# Main HTTP context
http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;
    
    # Logging configuration
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                   '$status $body_bytes_sent "$http_referer" '
                   '"$http_user_agent" "$http_x_forwarded_for" '
                   'rt=$request_time uct="$upstream_connect_time" '
                   'uht="$upstream_header_time" urt="$upstream_response_time"';
    
    access_log /var/log/nginx/access.log main;
    error_log /var/log/nginx/error.log warn;
    
    # Performance optimizations
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    types_hash_max_size 2048;
    server_tokens off;
    
    # Gzip compression
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_types
        application/atom+xml
        application/geo+json
        application/javascript
        application/x-javascript
        application/json
        application/ld+json
        application/manifest+json
        application/rdf+xml
        application/rss+xml
        application/xhtml+xml
        application/xml
        font/eot
        font/otf
        font/ttf
        image/svg+xml
        text/css
        text/javascript
        text/plain
        text/xml;
    
    # Rate limiting zones
    limit_req_zone $binary_remote_addr zone=api:10m rate=100r/m;
    limit_req_zone $binary_remote_addr zone=auth:10m rate=20r/m;
    limit_req_zone $binary_remote_addr zone=general:10m rate=1000r/m;
    
    # Security headers map
    map $sent_http_content_type $x_frame_options {
        ~image/ "";
        default "DENY";
    }
    
    # SSL Configuration
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES128-SHA256:ECDHE-RSA-AES256-SHA384;
    ssl_prefer_server_ciphers off;
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 10m;
    ssl_stapling on;
    ssl_stapling_verify on;
    
    # Main server block - Marketing Website
    server {
        listen 80;
        listen [::]:80;
        server_name amysoft.tech www.amysoft.tech;
        
        # Redirect HTTP to HTTPS
        return 301 https://$server_name$request_uri;
    }
    
    server {
        listen 443 ssl http2;
        listen [::]:443 ssl http2;
        server_name amysoft.tech www.amysoft.tech;
        
        # SSL Certificate paths (Let's Encrypt)
        ssl_certificate /etc/letsencrypt/live/amysoft.tech/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/amysoft.tech/privkey.pem;
        ssl_trusted_certificate /etc/letsencrypt/live/amysoft.tech/chain.pem;
        
        # Document root for website
        root /var/www/amysoft.tech/website/dist;
        index index.html;
        
        # Security headers
        add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" always;
        add_header X-Frame-Options $x_frame_options always;
        add_header X-Content-Type-Options "nosniff" always;
        add_header X-XSS-Protection "1; mode=block" always;
        add_header Referrer-Policy "strict-origin-when-cross-origin" always;
        add_header Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline' https://js.stripe.com https://www.google-analytics.com; style-src 'self' 'unsafe-inline' https://fonts.googleapis.com; font-src 'self' https://fonts.gstatic.com; img-src 'self' data: https:; connect-src 'self' https://api.stripe.com https://www.google-analytics.com; frame-src https://js.stripe.com; manifest-src 'self';" always;
        
        # Rate limiting
        limit_req zone=general burst=50 nodelay;
        
        # Cache static assets
        location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot)$ {
            expires 1y;
            add_header Cache-Control "public, immutable";
            add_header Vary "Accept-Encoding";
            
            # CORS headers for fonts and assets
            if ($request_method = 'GET') {
                add_header 'Access-Control-Allow-Origin' '*';
                add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
                add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range';
            }
        }
        
        # Angular routing
        location / {
            try_files $uri $uri/ /index.html;
            
            # Cache HTML files for 1 hour
            location ~* \.html$ {
                expires 1h;
                add_header Cache-Control "public, must-revalidate";
            }
        }
        
        # API proxy to backend
        location /api/ {
            limit_req zone=api burst=20 nodelay;
            
            proxy_pass http://localhost:3000;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_cache_bypass $http_upgrade;
            
            # Timeouts
            proxy_connect_timeout 5s;
            proxy_send_timeout 60s;
            proxy_read_timeout 60s;
        }
        
        # Health check endpoint
        location /health {
            access_log off;
            return 200 "healthy\n";
            add_header Content-Type text/plain;
        }
    }
    
    # PWA Application Server
    server {
        listen 443 ssl http2;
        listen [::]:443 ssl http2;
        server_name app.amysoft.tech;
        
        # SSL Certificate
        ssl_certificate /etc/letsencrypt/live/amysoft.tech/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/amysoft.tech/privkey.pem;
        ssl_trusted_certificate /etc/letsencrypt/live/amysoft.tech/chain.pem;
        
        # Document root for PWA
        root /var/www/amysoft.tech/pwa/dist;
        index index.html;
        
        # PWA-specific security headers
        add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" always;
        add_header X-Frame-Options "DENY" always;
        add_header X-Content-Type-Options "nosniff" always;
        add_header X-XSS-Protection "1; mode=block" always;
        add_header Referrer-Policy "strict-origin-when-cross-origin" always;
        add_header Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline' 'unsafe-eval'; style-src 'self' 'unsafe-inline'; img-src 'self' data: blob:; connect-src 'self' wss: https:; worker-src 'self'; manifest-src 'self'; font-src 'self' data:;" always;
        
        # Service Worker with proper caching
        location /service-worker.js {
            expires off;
            add_header Cache-Control "no-cache, no-store, must-revalidate";
            add_header Pragma "no-cache";
            add_header Expires "0";
        }
        
        # Web App Manifest
        location /manifest.json {
            expires 1h;
            add_header Cache-Control "public, must-revalidate";
            add_header Content-Type "application/manifest+json";
        }
        
        # PWA static assets with aggressive caching
        location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot)$ {
            expires 1y;
            add_header Cache-Control "public, immutable";
            add_header Vary "Accept-Encoding";
        }
        
        # PWA app shell routing
        location / {
            try_files $uri $uri/ /index.html;
            
            # Cache app shell for 24 hours
            location = /index.html {
                expires 24h;
                add_header Cache-Control "public, must-revalidate";
            }
        }
        
        # API proxy for PWA
        location /api/ {
            limit_req zone=api burst=50 nodelay;
            
            proxy_pass http://localhost:3000;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_cache_bypass $http_upgrade;
        }
    }
    
    # Admin Console Server
    server {
        listen 443 ssl http2;
        listen [::]:443 ssl http2;
        server_name admin.amysoft.tech;
        
        # SSL Certificate
        ssl_certificate /etc/letsencrypt/live/amysoft.tech/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/amysoft.tech/privkey.pem;
        ssl_trusted_certificate /etc/letsencrypt/live/amysoft.tech/chain.pem;
        
        # Document root for admin
        root /var/www/amysoft.tech/admin/dist;
        index index.html;
        
        # Enhanced security headers for admin
        add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" always;
        add_header X-Frame-Options "DENY" always;
        add_header X-Content-Type-Options "nosniff" always;
        add_header X-XSS-Protection "1; mode=block" always;
        add_header Referrer-Policy "no-referrer" always;
        add_header Content-Security-Policy "default-src 'self'; script-src 'self'; style-src 'self' 'unsafe-inline'; img-src 'self' data:; connect-src 'self'; font-src 'self'; base-uri 'self'; form-action 'self';" always;
        
        # IP restriction for admin (configure as needed)
        # allow 192.168.1.0/24;
        # deny all;
        
        # Admin static assets
        location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot)$ {
            expires 1y;
            add_header Cache-Control "public, immutable";
        }
        
        # Admin routing
        location / {
            try_files $uri $uri/ /index.html;
            
            # No caching for admin HTML
            location ~* \.html$ {
                expires off;
                add_header Cache-Control "no-cache, no-store, must-revalidate";
            }
        }
        
        # Admin API with enhanced rate limiting
        location /api/ {
            limit_req zone=api burst=10 nodelay;
            
            proxy_pass http://localhost:3000;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_cache_bypass $http_upgrade;
        }
    }
    
    # API Server Direct Access
    server {
        listen 443 ssl http2;
        listen [::]:443 ssl http2;
        server_name api.amysoft.tech;
        
        # SSL Certificate
        ssl_certificate /etc/letsencrypt/live/amysoft.tech/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/amysoft.tech/privkey.pem;
        ssl_trusted_certificate /etc/letsencrypt/live/amysoft.tech/chain.pem;
        
        # API security headers
        add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" always;
        add_header X-Content-Type-Options "nosniff" always;
        add_header X-XSS-Protection "1; mode=block" always;
        add_header Referrer-Policy "no-referrer" always;
        
        # Rate limiting for direct API access
        limit_req zone=api burst=100 nodelay;
        
        # Proxy to API server
        location / {
            proxy_pass http://localhost:3000;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_cache_bypass $http_upgrade;
            
            # CORS headers for API
            if ($request_method = 'OPTIONS') {
                add_header 'Access-Control-Allow-Origin' '*';
                add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS';
                add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization';
                add_header 'Access-Control-Max-Age' 1728000;
                add_header 'Content-Type' 'text/plain; charset=utf-8';
                add_header 'Content-Length' 0;
                return 204;
            }
        }
        
        # Health check
        location /health {
            access_log off;
            proxy_pass http://localhost:3000/health;
        }
    }
}

# Error pages
error_page 404 /404.html;
error_page 500 502 503 504 /50x.html;
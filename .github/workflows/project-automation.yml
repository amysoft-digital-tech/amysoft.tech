name: Project Board Automation

on:
  issues:
    types: [opened, closed, reopened, labeled, unlabeled, assigned, unassigned]
  pull_request:
    types: [opened, closed, reopened, ready_for_review, converted_to_draft]
  pull_request_review:
    types: [submitted]
  workflow_run:
    workflows: ["Website CI/CD Pipeline", "API CI/CD Pipeline", "PWA CI/CD Pipeline", "Admin Console CI/CD Pipeline"]
    types: [completed]

env:
  GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

jobs:
  website-project-automation:
    name: Website Project Automation
    runs-on: ubuntu-latest
    if: |
      (github.event.issue && contains(github.event.issue.labels.*.name, 'website')) ||
      (github.event.pull_request && startsWith(github.event.pull_request.head.ref, 'website/')) ||
      (github.event.workflow_run && github.event.workflow_run.name == 'Website CI/CD Pipeline')
    steps:
      - name: Move new issues to backlog
        if: github.event.action == 'opened' && github.event.issue
        run: |
          gh project item-create 5 --owner amysoft-digital-tech --url ${{ github.event.issue.html_url }}
          echo "Added issue to Website project backlog"

      - name: Move issues to requirements review when labeled
        if: |
          github.event.action == 'labeled' && 
          contains(github.event.label.name, 'ready-for-review')
        run: |
          # Get project item ID and move to Requirements Review
          echo "Moving issue to Requirements Review status"

      - name: Move issues to development when assigned
        if: github.event.action == 'assigned'
        run: |
          echo "Moving assigned issue to Development status"

      - name: Move PR to code review
        if: |
          github.event.action == 'opened' && 
          github.event.pull_request &&
          startsWith(github.event.pull_request.head.ref, 'website/')
        run: |
          echo "Moving PR to Code Review status"

      - name: Move to testing on PR approval
        if: |
          github.event.review.state == 'approved' &&
          startsWith(github.event.pull_request.head.ref, 'website/')
        run: |
          echo "Moving to Testing status after PR approval"

      - name: Move to done when issue closed
        if: github.event.action == 'closed' && github.event.issue
        run: |
          echo "Moving completed issue to Done status"

      - name: Handle CI/CD pipeline results
        if: |
          github.event.workflow_run.name == 'Website CI/CD Pipeline' &&
          github.event.workflow_run.conclusion
        run: |
          if [ "${{ github.event.workflow_run.conclusion }}" = "success" ]; then
            echo "CI/CD passed - updating project status to ready for deployment"
          else
            echo "CI/CD failed - moving back to development"
          fi

  api-project-automation:
    name: API Project Automation
    runs-on: ubuntu-latest
    if: |
      (github.event.issue && contains(github.event.issue.labels.*.name, 'api')) ||
      (github.event.pull_request && startsWith(github.event.pull_request.head.ref, 'api/')) ||
      (github.event.workflow_run && github.event.workflow_run.name == 'API CI/CD Pipeline')
    steps:
      - name: Move new issues to backlog
        if: github.event.action == 'opened' && github.event.issue
        run: |
          gh project item-create 6 --owner amysoft-digital-tech --url ${{ github.event.issue.html_url }}
          echo "Added issue to API project backlog"

      - name: Auto-assign security label for security issues
        if: |
          github.event.action == 'opened' && 
          (contains(github.event.issue.title, 'security') || contains(github.event.issue.title, 'auth'))
        run: |
          gh issue edit ${{ github.event.issue.number }} --add-label security
          echo "Auto-added security label"

      - name: Move database issues to database review
        if: |
          github.event.action == 'labeled' && 
          contains(github.event.label.name, 'database')
        run: |
          echo "Moving database issue to Database Review status"

      - name: Handle performance testing results
        if: |
          github.event.workflow_run.name == 'API CI/CD Pipeline' &&
          github.event.workflow_run.conclusion == 'success'
        run: |
          echo "API performance tests passed - updating performance metrics"

      - name: Alert on security scan failures
        if: |
          github.event.workflow_run.name == 'API CI/CD Pipeline' &&
          github.event.workflow_run.conclusion == 'failure'
        run: |
          echo "API security scan failed - creating alert"
          # Add notification logic for security team

  pwa-project-automation:
    name: PWA Project Automation
    runs-on: ubuntu-latest
    if: |
      (github.event.issue && contains(github.event.issue.labels.*.name, 'pwa')) ||
      (github.event.pull_request && startsWith(github.event.pull_request.head.ref, 'pwa/')) ||
      (github.event.workflow_run && github.event.workflow_run.name == 'PWA CI/CD Pipeline')
    steps:
      - name: Move new issues to backlog
        if: github.event.action == 'opened' && github.event.issue
        run: |
          gh project item-create 8 --owner amysoft-digital-tech --url ${{ github.event.issue.html_url }}
          echo "Added issue to PWA project backlog"

      - name: Auto-label offline features
        if: |
          github.event.action == 'opened' && 
          (contains(github.event.issue.title, 'offline') || contains(github.event.issue.title, 'cache'))
        run: |
          gh issue edit ${{ github.event.issue.number }} --add-label offline
          echo "Auto-added offline label"

      - name: Move PWA audit issues to optimization
        if: |
          github.event.action == 'labeled' && 
          contains(github.event.label.name, 'performance')
        run: |
          echo "Moving performance issue to PWA Optimization status"

      - name: Handle PWA audit results
        if: |
          github.event.workflow_run.name == 'PWA CI/CD Pipeline' &&
          github.event.workflow_run.conclusion
        run: |
          if [ "${{ github.event.workflow_run.conclusion }}" = "success" ]; then
            echo "PWA audit passed - updating PWA score metrics"
          else
            echo "PWA audit failed - moving to optimization queue"
          fi

      - name: Mobile testing automation
        if: |
          github.event.action == 'labeled' && 
          contains(github.event.label.name, 'mobile-optimization')
        run: |
          echo "Triggering mobile device testing automation"

  admin-project-automation:
    name: Admin Console Project Automation
    runs-on: ubuntu-latest
    if: |
      (github.event.issue && contains(github.event.issue.labels.*.name, 'admin')) ||
      (github.event.pull_request && startsWith(github.event.pull_request.head.ref, 'admin/')) ||
      (github.event.workflow_run && github.event.workflow_run.name == 'Admin Console CI/CD Pipeline')
    steps:
      - name: Move new issues to backlog
        if: github.event.action == 'opened' && github.event.issue
        run: |
          gh project item-create 9 --owner amysoft-digital-tech --url ${{ github.event.issue.html_url }}
          echo "Added issue to Admin Console project backlog"

      - name: Auto-assign RBAC reviews for security issues
        if: |
          github.event.action == 'opened' && 
          (contains(github.event.issue.title, 'rbac') || contains(github.event.issue.title, 'security'))
        run: |
          gh issue edit ${{ github.event.issue.number }} --add-label rbac,security
          echo "Auto-added RBAC and security labels"

      - name: Move compliance issues to security review
        if: |
          github.event.action == 'labeled' && 
          (contains(github.event.label.name, 'security') || contains(github.event.label.name, 'rbac'))
        run: |
          echo "Moving security/RBAC issue to Security Review status"

      - name: Handle compliance validation results
        if: |
          github.event.workflow_run.name == 'Admin Console CI/CD Pipeline' &&
          github.event.workflow_run.conclusion
        run: |
          if [ "${{ github.event.workflow_run.conclusion }}" = "success" ]; then
            echo "Compliance validation passed - updating compliance status"
          else
            echo "Compliance validation failed - alerting compliance team"
          fi

      - name: Customer support feature automation
        if: |
          github.event.action == 'labeled' && 
          contains(github.event.label.name, 'customer-support')
        run: |
          echo "Moving customer support feature to User Acceptance Testing"

  cross-project-dependency-automation:
    name: Cross-Project Dependencies
    runs-on: ubuntu-latest
    if: |
      contains(github.event.issue.body, 'Dependencies:') ||
      contains(github.event.pull_request.body, 'Dependencies:')
    steps:
      - name: Link dependent issues
        run: |
          echo "Analyzing cross-project dependencies"
          # Extract dependency information and link related issues

      - name: Update dependent projects on completion
        if: github.event.action == 'closed'
        run: |
          echo "Updating dependent project statuses"
          # Notify dependent projects when prerequisites are completed

      - name: Block dependent issues until prerequisites complete
        run: |
          echo "Checking prerequisite completion status"
          # Add logic to prevent dependent issues from moving forward

  notification-automation:
    name: Notification Automation
    runs-on: ubuntu-latest
    if: |
      github.event.workflow_run.conclusion == 'failure' ||
      (github.event.action == 'opened' && contains(github.event.issue.labels.*.name, 'critical'))
    steps:
      - name: Alert on critical issues
        if: |
          github.event.action == 'opened' && 
          contains(github.event.issue.labels.*.name, 'critical')
        run: |
          echo "CRITICAL ISSUE ALERT: ${{ github.event.issue.title }}"
          # Add Slack/email notification logic

      - name: Alert on CI/CD failures
        if: github.event.workflow_run.conclusion == 'failure'
        run: |
          echo "CI/CD FAILURE ALERT: ${{ github.event.workflow_run.name }}"
          # Add notification logic for development team

      - name: Weekly project status summary
        if: github.event.schedule
        run: |
          echo "Generating weekly project status summary"
          # Add logic to generate and send project status reports